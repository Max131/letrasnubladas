---
import { getCollection, render } from "astro:content";
import { getFormatedDate } from "@utils/index.ts";
import { normalizeString } from "@utils/index.ts";
import Layout from "@layouts/Default.astro";
import PostImage from "@components/PostImage.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id.match(/[a-zA-Z].+/)[0] },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);
---

<Layout
  title={post.data.title}
  description={post.data.excerpt}
  classes="post-page"
>
  <article class={normalizeString(post.data.category)}>
    <header>
      <h1>{post.data.title}</h1>
      <p>{post.data.category} por {post.data.author}</p>
      <time datetime={`${post.id.match(/^\d{4}-\d{2}-\d{2}/)[0]}`}>
        {getFormatedDate(post.id.match(/^\d{4}-\d{2}-\d{2}/)[0])}
      </time>
    </header>
    <div>
      {
        post.data.image && (
          <PostImage image={post.data.image} alt={post.data.title} />
        )
      }
      <Content />
    </div>
  </article>
</Layout>

<style>
  header {
    margin-block: 1rem 5rem;
  }

  h1 {
    margin-block: 0;
    font-size: clamp(2rem, 1rem + 4vw, 3rem);
    line-height: 1;
    max-width: fit-content;
    margin-inline: auto;
  }

  p {
    position: relative;
    margin-block: 0.75rem 0;
    text-transform: uppercase;
    font-size: small;
    font-weight: 500;
    max-width: fit-content;
    margin-inline: auto;

    &::after {
      content: "";
      position: absolute;
      left: 50%;
      translate: -50% 0;
      bottom: -0.5rem;
      width: 60%;
      height: 4px;
      background-color: color-mix(in srgb, var(--text-color), transparent 70%);
    }
  }

  time {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
</style>
